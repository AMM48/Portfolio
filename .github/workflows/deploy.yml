name: Portfolio Pipeline

on:
  push:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Super-Linter
      uses: github/super-linter@249a4426fdf5b7b6fdd3658229b68ec9e02f2f417ea911f3ffdcd97edea1015a
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_JAVASCRIPT_ES: true
        VALIDATE_TYPESCRIPT_ES: true
        VALIDATE_JSON: true
        
  aikido-security:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect new vulnerabilities
        uses: AikidoSec/github-actions-workflow@v1.0.13
        with:
            secret-key: ${{ secrets.AIKIDO_SECRET_KEY }}
            fail-on-timeout: true
            fail-on-dependency-scan: true
            minimum-severity: 'CRITICAL'
            timeout-seconds: 180
            
  build:
    runs-on: ubuntu-latest
    needs: aikido-security
    steps:     
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.10.0
        
    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          npm-${{ runner.os }}-
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build --omit=dev

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        publish_dir: ./dist/my-portfolio/browser
        external_repository: AMM48/AMM48.github.io
        publish_branch: main 
        keep_files: false
        full_commit_message: ${{ github.event.head_commit.message }}
